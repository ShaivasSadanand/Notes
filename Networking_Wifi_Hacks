- To Connect the wireless adapter to kali virtual machine look here ->
https://www.youtube.com/watch?v=zZG65GkWGdU&t=1s

- MAC(Media Access Control) address is permanent, physical and unique address which is assigned to network interfaces by 
  manufacturer , IP address is used in the internet to identify computers and communicate between devices on the internet,
  while the MAC address is used within the network to identify devices and transfer data between devices.
  So each pack of data which is send within the network contains the source MAC and the destination MAC.
  
- Changing MAC address provides us ->
  - Anonymity
  - Impersonate other devices
  - Bypass filters
  - or connect to network which only specific devices and specific MAC addresses r allowed to connect
  
- use cmd -> ifconfig // to list interfaces on the current computer, interface here means a network card
- The interfaces created in virtual machines r virtual interfaces bcz we set this machine to use NAT network
  'lo' is the virtual interface created by linux, 'wlan0' is the external USB wireless adapter, 'ether' in the 'eth0' here
represents the MAC address
- For 'lo' and 'wlan0' u will notice u don't have an IP address and this is bcz none of these interfaces r connected to a network
- If u look into the right most corner of the kali and click a dropdown icon u will see the their is an option saying that the
'Wifi Not Connected' and that's why the 'wlan0' currently does not have an IP address

- ifconfig wlan0 down // to disable the interface
- ifconfig wlan0 hw ether 00:11:22:33:44:55    // To change the MAC address to address -> 00:11:22:33:44:55
- ifconfig wlan0 up // to enable the interface

- Whether u r watching a video or doing chat etc all the data is send in packets, In the network devices ensure that these packets go
th right direction using the MAC address So each packet has a source MAC and destination MAC, Now if we want to send the packet to the
router from the machine then we need to enter the MAC address of the Router
- We can capture the data packets which r in the air even if they do not contain the destination MAC address, for this we need to change
the mode of operation of our wireless interface so that it operates in Monitor mode

cmd -> iwconfig   // to see wireless interfaces only and to check the monitor mode
Here u will see the inteface data for wlan0 only and the mode in it would be Managed this means that this is the default mode of all
wireless devices and this device will only capture packets that has the destination MAC as the MAC address of this device
cmd -> ifconfig wlan0 down // before changing the mode
cmd -> airmon-ng check kill // to kill the process which could interfer when using the interface in monitor mode, this is not
                            // mandatory cmd, this cmd will kill the network manager and u will lose the internet connection and this is
                            // ok as we do not require the internet connection to run any of the attaks reuired in monitor mode

cmd -> airmon-ng start wlan0 // this will start monitor mode on the interface wlan0

- After enabling the monitor mode on our wireless interface we r able to capture all the wifi packets sent within our range even
if the packet is not directed to our computer even if we r not connected to the target network and even without knowing the key
or the password of the target network so we just only need a program that will capture these packets for us, prgm we r going to use
is 'airodump-ng' it's part of the 'aircrack-ng' suit and it's a packet sniffer so it's basically a program designed to capture packets
while u r in monitor mode
So it will allow us to see all the wireless networks around us and show us detailed information about ->
MAC address
Channel
Encryption
Clients connected to this network etc

cmd -> airodump-ng wlan0 //start the monitor mode and discover wireless networks
press ctrl+c // to quit

Now in monitor mode ->
- ESSID // it shows the name of the wireless networks
- BSSID // it shows the MAC address
- PWR // it shows the signal strength, higher the number better the signal their is
- Beacons // these r frames sent by the network in order to broadcast its existence, So every network even if its hidden sent these
          // types of frames, So it basically tells all the devices around it that I exist
- #Data // this the no. of data packets
- CH // this is the channel
- MB // this is the maximum speed supported by the network
- ENC // this is the encryption used by the network, if it is 'OPEN' then it means their is no password protection even on the network
- CIPHER // it is the cipher used in the network
- AUTH // this is the autentication used on the network

Wifi band of a network defines what frequency it can use to broadcast the signal, this means it also define the frequency that the
clients or the computer need to be able to support and use in order to be able to connect to this network, two main frequncies used
in wifi networks r 2.4 and 5 ghz previously we were only sniffing on 2.4 ghz frequency and that's why u will notice that the wireless
card of ur system shows more wirless networks discovered then ur wireless adapter
In some places in world such as in ireland if the network is broadcasting over the 5ghz then the service provider will add 5g as the
postfix in the name or 'ssid' of the wireless network

cmd -> airodump-ng --band a wlan0 // this will switch and start sniffing on the 5 ghz frequency networks
cmd -> airodump-ng --band abg wlan0 // this will sniff on both 2.4 and 5 ghz frequencies at the same time, the only problem is it
                                    // is slow as the sniffing on two bands make the lot channels that has to hop on
cmd -> airodump-ng --bssid target_network_bssid --channel channel_no --write file_name wlan0 // here we r telling to sniff and gather
 // more data on particular network and writing that gathered data in a file and after fireing the cmd it will show only one network
 // and their will be a 2nd section also which will show u the clients connected to that network and their MAC addresses
 // Here in 2nd section we can see the following parameters also such as
 // - Rate // it is the speed
 // - Lost // this is the amount of data lost
 // - Frames // these the packets which we have captured
 // - Probe // it shows the devices which r not connected but trying to connect with the network
 // press ctrl + c // to quit
 
 cmd -> ls // to list the files which contains the captured data of the network, u will see 4 files with the same name but different
 // extensions with some post fix no. also added to it ex test-01.cap but our file name was only 'test'
 // the file with extension 'cap' is the file that contains the data which we captured and it should contain the chat msgs, passwords
 // etc anything which the connected devices to our target network did on the internet but all the data which is sent between the router
 // and the connected devices is encrypted
 
 cmd -> wireshark // to start the wireshark prgm which helps to analyse the data and then go to the File and open the file with the
 // extension 'cap' and u will see that the data is encrypted except the device manufacture which was connected to the network so this
 // way u kind of guess what computers r their and what OS they use
 
 Deauthentication Attack -> This attack allow us to disconnect any device from any network before connecting to any of these networks,
 and without the need to know the passowrd for the network
 To do this we r going to pretend to be the client that we want to disconnect by changing our MAC address to the MAC address of that
 client and tell router that I want to disconnect from u and then we r going to be pretend the router again by changing our MAC address
 to the router's MAC address and tell the client that u requested to be disconnected, So I'm going to disconnect u 
 This will aloow us to successfully disconnect or deauthenticate any clint from any network, for this task be use a tool aireplay-ng

cmd in terminal 1 -> airodump-ng --bssid target_network_bssid --channel channel_no wlan0
cmd in terminal 2 -> aireplay-ng --deauth 1000000000 -a router_MAC_address -c client_MAC_address wlan0
// here we r going to keep sending large packets to both the router and the device, hence it willdisconnect the device for very 
// long time and the only way is to quit from the aireplay-ng, this cmd will fail in the case the airodump-ng is running against
// the target network
// this is going to disconnect client form the network and only way to connect back is if u quit the running prgms from both terminals
// this attack could be used in many ways just as in social engineering to ask client to install a backdoor or create another fake
// access point and get them to connect to it and start spying on them from that access point

Gaining Access ->
WEP(Wired Equivalent Privacy) -> This is an old encryption but still used in some networks and it is easy to break, WEP uses algorithm
RC4 to encrypt it's data,
The way it works is that if a client wants to send something to the router then it will encrypt that data using a key then that data
is sent in air then the access point or router will receive this encrypted packet and transform data back to it's unecrypted data\
by using the same key and vice versa when router sends data to the client the problem is that in order to encrypt data while sending
to the router WEP tries to generate a unique key for each packet to do this it generate 24bit initialization vector then the
initialization vector is added with the password of the network and this generates a key stream and this key stream is used to encrypt
the packet but at the time of sending the encrypted data it also append the initialization vector to the packet bcz once the router
receives the packet it needs to be able to decrypt the packet and the router already has the network password so now it can generate
the key stream to decrypt the data

So the weakness in WEP ->
- initialization vector size is too small
- initialization vector is sent in plain text

which means that the ->
- initialization vector will repeat on buzy networks
- this makes the WEP vulnerable to statistical attacks
- repeated initialization vector can be used to determine the key stream
- and so the encryption got break

Hence to crack WEP we need to ->
- capture a large number of packets/initialization vector, we can use airodump-ng for this task
- analyse the captured initialization vectors and crack the key, we can use aircrack-ng for this task

cmd in terminal 1 -> airodump-ng --bssid target_network_bssid --channel channel_no --write file_name wlan0 // choose network of WEP
// u will notice that under the #Data column the no. of usefull packets that contain a different initialization vector which we can
// use in order to crack the key and higher the no. is more likely we will be able to crack the key and if the network is very buzy
// the no. will increase very fast
cmd in terminal 2 -> aircrack-ng file_name-01.cap // this will say in output as the key is found

now quit the prgm in terminal 1 by ctrl + q
now we can connect to the target network using the ASCII output in terminal 2 and u can also use the key which is found just remove
the colons in the key, In some cases we will not see the ASCII password

So now we r able to crack the WEP network and connect to it by using the key we found but still their is one problem which is that
if the network is not buzy in that case the it would take time to capture enough initialization vector, So the solution to this problem
is to force the AP to generate new packets with new initialization vectors.
But before doing this we need to associate to this network, Associate here means we need to tell this network that we want to
communicate with it bcz by defaults access points ignore any requests they get unless the device has connected to this network or
associated with it and problem is we r still unable to connect to the network, what we r doing here is just telling the target network
look i want to communicate with u don't ignore my requests so it is similar to when to click on the network when u wants to connect
to it and u still haven't put the password u r just telling the target network that I want to communicate with u and don't ignore me

So to Associate to the target network->
cmd in terminal 1 -> airodump-ng --bssid target_network_bssid --channel channel_no --write file_name wlan0 // here #Data will increase
// really very slow
cmd in terminal 2 -> aireplay-ng --fakeauth 0 -a target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0// this is to associate
// to the network, in the MAC address of the wireless adapter replace '-' with ':', after executing the cmd u will see in the terminal 1
the wireless adapter MAC address to be appearing as the devices associated to the network

So here we got associated to the network and if u send anything it's gonna accept it and it's going to communicate with u not u r still
not connected to the network, u still cannot use the internet from the network

Now we will start injecting packets into the traffic to force the access point to generate new packets with new initialization vectors,
this will increase the number of data very quickly and allow us to crack WEP networks even if the network was not buzy, Their r no. of
ways to do this but one of the most reliable way is using the ARP Request Replay Attack

ARP Request Replay Attack ->
The idea behind this method is to wait for the ARP packet and once this packet is sent into network we r going to capture it and then
retransmit it and once we do this the router is forced to generate a new packet with a new initialization vector, So by repeating this
process we will be forcing the router to continously generate new packets with new initialization vectors then once we have enough of
the initialization vectors we can run aircrack-ng just like before and crack the key

cmd in terminal 1 -> airodump-ng --bssid target_network_bssid --channel channel_no --write file_name wlan0
cmd in terminal 2 -> aireplay-ng --fakeauth 0 -a target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0
cmd in terminal 3 -> aireplay-ng --arpreplay -b target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0 // this will
// execute the ARP Request Replay Attack, the #Data in terminal 1 will increase very quickly which means we manage to capture the
// ARP packet and ARP Request Replay Attack is running as aspected
cmd in terminal 2 again ->aircrack-ng file_name-01.cap // this will say in output as the key is found, their could be the case that
// it require more data packets and the reason for this is that u modified the settings of the network so that it use a 128 bit key
// bcz in WEP u can either use 64bit or 128 bit key

Korek Chopchop Attack -> Another method of increasing the data rapidly in network that has no clients associated with it or it has very
low traffic Korek Chopchop Attack, this attack sometimes might work and sometimes not
In this method instead of directly injecting the ARP packet that we capture we r gonna try to determine the history for this packet,
once we do do that we gonna create a new packet, So we gonna forge a new packet and inject this new packet into the traffic and this
will force the access point to create a new packet with a new initialization vector, we gonna capture it and inject it back into the
traffic we gonna keep doing this untill the no. of data is high enough to crack through a key

cmd in terminal 1 -> airodump-ng --bssid target_network_bssid --channel channel_no --write file_name wlan0
cmd in terminal 2 -> aireplay-ng --fakeauth 0 -a target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0
cmd in terminal 3 -> aireplay-ng --chopchop -b target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0 // this will execute
// the chop chop attack, while execution it is going to ask u that if u want to decrypt and determine it's keystream for which enter
// 'y' for yes, the keystream would we got saved into a file after execution is completed and it's name would be shown to u at the
// end of the execution
cmd in terminal 3 again -> packetforge-ng -0 -a target_network_bssid -h MAC_address_of_my_wirless_adapter -k 255.255.255.255
                          -l 255.255.255.255 -y keystreamfile_obtained_by_chopchop_attack -w name_of_the_forged_packet
//-k 255.255.255.255 represents the destination IP and -l 255.255.255.255 is the source

Next step is to inject this forged packet into the traffic and cause the no. of data to increase rapidly

cmd in terminal 2 again -> aireplay-ng --fakeauth 0 -a target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0
cmd in terminal 3 again -> aireplay-ng -2 -r name_of_the_forged_packet wlan0 // here -2 is for replay and this will inject the packet
// it will ask u while execution if u want to use this packet so enter 'y' for yes
// here the higher the percentage of keystream u obtained during the first time execution of the cmd in the terminal 3 the more chances
// their will be of ur success and if ur #Data in terminal 1 is increasing quickly then it means the attack was successfull
cmd in terminal 2 again ->aircrack-ng file_name-01.cap //this will say in output as the key is found

Fragmentation Attack -> In this attack we have to obtain 1500 bytes of the PRGA(pseudo random generation algorithm), we need to be 
closer to the target network to successfully run this attack but it's much quicker then the chop chop attack, after obtaining the
PRGA we can use it to forge a new packet which can be injected into the traffic to generate new initialization vector
So concept is simple we gonna capture a packet determines it's PRGA, forge a new packet and then inject that packet into the air

cmd in terminal 1 -> airodump-ng --bssid target_network_bssid --channel channel_no --write file_name wlan0
cmd in terminal 2 -> aireplay-ng --fakeauth 0 -a target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0
cmd in terminal 3 -> aireplay-ng --fragment -b target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0 // this will execute
// the fragmentation attack, after getting the packet while execution it is going to ask if u want to use it then type 'y' after which
// it will try to determine the PRGA, if in the case that packet wasn't usefull it will ask it will wait for another packet to use
// and ask u again if u want to use this packet then type 'y' do this untill the keystream is generated and the file name for the
// keystream appears at the end of the execution
cmd in terminal 3 again -> packetforge-ng -0 -a target_network_bssid -h MAC_address_of_my_wirless_adapter -k 255.255.255.255
                          -l 255.255.255.255 -y keystreamfile_obtained_by_chopchop_attack -w name_of_the_forged_packet
cmd in terminal 2 again -> aireplay-ng --fakeauth 0 -a target_network_bssid -h MAC_address_of_my_wirless_adapter wlan0
cmd in terminal 3 again -> aireplay-ng -2 -r name_of_the_forged_packet wlan0 // here -2 is for replay and this will inject the packet
// it will ask u while execution if u want to use this packet so enter 'y' for yes
cmd in terminal 2 again ->aircrack-ng file_name-01.cap //this will say in output as the key is found

WPA/WPA2 Cracking ->
Both of them WPA and WPA2 r very similar, both can be cracked using the same methods, the only difference is that the encryption
used to ensure the msg integrity as WPA uses the TKIP and WPA2 uses the CCNP
WPA and WPA2 both come after WEP and they were designed to address weaknessess in WEP hence they r more secure

This WPS feature, if enabled and misconfigured can be exploited to recover the key without cracking the actual encryption

WPS allows devices to connect to network easily without having to enter the key for the network, So it was actually designed to simplify
the process of connecting printers and such devices, U can actually see the WPS button on most wireless enabled printers
- IF this button on printer or device is presses and then press the WPS button on router, u will notice the printer will get connect
to the router without u having to enter the key, this way the authentication is done using an eight digit pin which could be considered
as a password which is made of only numbers and the length of this password is only 8.

So this actually gives us a releatively small list of possible passwords and we can try all these passwords in a relatively short time

Once we get this pin it can be used to recover actuall WPA or WPA2 key. So we r here exploiting a feature that can be enabled on these
encryptions, So this to work 1st we need WPS to be enabled on the network and also it needs to be misconfigured, So it needs to be
configured as the normal pin authentication and not a push button authentication.
If the push button authentication is used then the router will refuse any pins that we try unless the WPS button is pressed on the
router. So in most modern routers the WPS will be disabled by default, but still it is always a gud idea to check if the WPS is 
enabled and try it.

Exploiting the WPS ->
- enable the monitor mode on the wireless adapter
- wash // this will show all the networks which have WPS enabled
